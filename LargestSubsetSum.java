package com.test;

public class LargestSubsetSum {

	public static void main(String[] args) {
		maxSubsetSum(new int[] { 2, 4 });
		maxSubsetSum(new int[] { 45, 21, 10, 16 });
		maxSubsetSum(new int[] { 6, 5, 9 });
		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		System.out.println("-----------------------------------------------");
		System.out.println("-----------------------------------------------");
		System.out.println("Performance Testing");
		System.out.println("-----------------------------------------------");
		System.out.println("-----------------------------------------------");
		//Performance Testing
		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

		maxSubsetSum(new int[] { 1000000000, 999999999, 899999000, 200000000,
				1000000000, 999999999, 899999000, 200000000,1000032000, 999990000, 899000000, 255000000,
				1200000000, 950000000, 899955000, 600000000,1000000000, 999999999, 899999000, 20000000,
				1007000000, 199999999, 894999000, 274000000,1000000000, 999999999, 899999000, 210000000
				,33333333, 999999999, 899999000, 200020000,1000000000, 999999999, 899999000, 700000000
				,1000005000, 999999999, 399999000, 450000000,400000000, 699999999, 699999000, 800000000});

	}

	static long[] maxSubsetSum(int[] k) {

		long[] output = new long[k.length];

		for (int i = 0; i < k.length; i++) {
			long sum = 0;
			double sqrt = Math.sqrt(k[i]);
			if (sqrt == Math.floor(sqrt)) {
				int intSqrt = new Double(sqrt).intValue();
				sum = intSqrt;
				for (int j = 1; j < sqrt; j++) {
					if (k[i] % j == 0) {
						sum = sum + j;
						sum = sum + k[i] / j;
					}
				}
			} else {
				for (int j = 1; j <= sqrt; j++) {
					if (k[i] % j == 0) {
						sum = sum + j;
						sum = sum + k[i] / j;
					}
				}
			}
			output[i] = sum;
			System.out.println("k(" + k[i] + ") : " + output[i]);
		}

		return output;
	}
}
